plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library' // Provides support for building a Java library. Also ein jar
	id 'eclipse'
}

// --warning-mode=all // (all,fail,none,summary)

compileJava.options.encoding = 'UTF-8'
sourceSets.main.java.srcDirs += ['e-doc-commons/src/main/java']

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
	mavenCentral()
	
/*
JCenter Maven repository / https://bintray.com/

Bintray's JCenter is an up-to-date collection of all popular Maven OSS artifacts, 
including artifacts published directly to Bintray.

 */
    jcenter()
}

/*
 Abhängigkeiten in Gradle folgen dem gleichen Format wie Maven . Abhängigkeiten sind wie folgt aufgebaut:

group:name:version

compile 'org.springframework:spring-core:4.3.1.RELEASE'

Eine alternative Syntax hierfür benennt jede Komponente der Abhängigkeit explizit wie folgt:

compile group: 'org.springframework', name: 'spring-core', version: '4.3.1.RELEASE'

 Manchmal haben Sie eine lokale JAR-Datei, die Sie Ihrem Gradle-Build als Abhängigkeit hinzufügen müssen. So können Sie das machen:

dependencies {
    compile files('path/local_dependency.jar')
}

 */
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
	// used in marshaller:
	api('org.glassfish.jaxb:jaxb-runtime:2.3.3')
	// used in jaxb-runtime:
	api('com.sun.istack:istack-commons-runtime:3.0.11')
//	compile files('e-doc-commons/lib/jaxb-runtime-2.3.3.jar')
//	compile files('e-doc-commons/lib/istack-commons-runtime-3.0.11.jar')
// ... 
	// wg. Singleton:
	api('javax.inject:javax.inject:1')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
	testImplementation('org.hamcrest:hamcrest:2.2')
	
    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")
//    testRuntime("org.junit.platform:junit-platform-runner:1.5.2")  
}

test {
    useJUnitPlatform()
}
